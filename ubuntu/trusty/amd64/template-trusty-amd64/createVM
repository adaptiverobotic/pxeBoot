#! /bin/bash
# -----------------------------------------------------------------------------
# createVM
#
# This file is unique per VM, so it should live in its own directory
#
# Works best if run from your local pxeBoot directory - that way you can choose
# the distribution you're trying to build. You must be the pxeboot user to run
# this script!
#
# ie ./ubuntu/trusty/amd64/vmname/createVM
#
# Copyright (C) 2014-2015 Ralph Hempel <rhempel@hempeldesigngroup.com>
#
# See LICENSE for https://github.com/rhempel/pxeBoot
# -----------------------------------------------------------------------------

LOG_LEVEL=4

set -e
shopt -s nullglob

. ./bashtools/src/fmt
. ./bashtools/src/checkutil

# -----------------------------------------------------------------------------

info "Executing $0"

# -----------------------------------------------------------------------------

VM_NAME="template-trusty-amd64"
VM_PATH="/srv/vboxusers/$(id -u -n)"
VM_DESC="Trusty Tahr 64 Headless PreSeeded Install Template"

checkemptyvar "VM_NAME"
checkemptyvar "VM_PATH"
checkemptyvar "VM_DESC"

# Needs to be this big - 256 MB fails the install

vmRAMSize="512"

vmDiskSize="6144"
vmDiskMedium="${VM_PATH}/${VM_NAME}/${VM_NAME}.vdi"

vmVrdePort="33955"

HostOnlyNetmask="255.255.255.0"
HostOnlyVmAddress="192.168.56.55"
HostOnlyHostAddress="192.168.56.1"

vmNATBootFile="pxelinux.0"
vmNATPrefix="/srv/pxeboot/tftp"

checkemptyvar "vmRAMSize"
checkemptyvar "vmDiskSize"
checkemptyvar "vmDiskMedium"
checkemptyvar "vmVrdePort"
checkemptyvar "HostOnlyNetmask"
checkemptyvar "HostOnlyVmAddress"
checkemptyvar "HostOnlyHostAddress"
checkemptyvar "vmNATBootFile"
checkemptyvar "vmNATPrefix"

# -----------------------------------------------------------------------------
info "  Creating \""${VM_PATH}"/"${VM_NAME}"\" "

VBoxManage createvm --basefolder "${VM_PATH}" --name "${VM_NAME}" --register

# -----------------------------------------------------------------------------
# Set up the VM with memory
# - Starting with Ubuntu Precise Pangolin, the default video card need
#   at least 12 MB of RAM to show the boot screen and startup messages

info "  Configuring \""${VM_NAME}"\" machine"

VBoxManage modifyvm "${VM_NAME}" --memory "${vmRAMSize}"    \
                                 --acpi on                  \
                                 --boot1 disk               \
                                 --boot2 dvd                \
                                 --boot3 net                \
                                 --vram 12                  \
                                 --vrde on                  \
                                 --vrdeport "${vmVrdePort}" \
                                 --vrdeauthtype null        \
                                 --rtcuseutc on

# -----------------------------------------------------------------------------
# Add the NICs, always add NIC1 as host-only. Other NICs depend on existence
# of corresponding host adapters...
 
info "  Configuring \""${VM_NAME}"\" NICs"

VBoxManage modifyvm "${VM_NAME}" --nic1 hostonly             \
                                 --hostonlyadapter1 vboxnet0

[[ -e "/sys/class/net/eth0" ]] && VBoxManage modifyvm "${VM_NAME}" --nic2 bridged        \
                                                                   --bridgeadapter2 eth0

[[ -e "/sys/class/net/eth1" ]] && VBoxManage modifyvm "${VM_NAME}" --nic3 bridged        \
                                                                   --bridgeadapter3 eth1

VBoxManage modifyvm "${VM_NAME}" --nic4 nat                        \
                                 --nicbootprio4 1                  \
                                 --natnet4 10.0.2/24               \
                                 --nattftpprefix4 "${vmNATPrefix}" \
                                 --nattftpfile4 "${vmNATBootFile}"

# -----------------------------------------------------------------------------
# Create the hard drive controller and disk image
 
info "  Configuring \""${VM_NAME}"\" Disk Controller and Creating Image"
info "    \"${vmDiskMedium}\""

VBoxManage storagectl "${VM_NAME}" --name "SCSI Controller" \
                                   --add scsi               \
                                   --controller LSILogic

VBoxManage createhd --filename "${vmDiskMedium}" \
                    --size "${vmDiskSize}"

# -----------------------------------------------------------------------------
# Attach the disk image
 
info "  Attaching \""${VM_NAME}"\" Disk Image"

VBoxManage storageattach "${VM_NAME}" --storagectl "SCSI Controller" \
                                      --port 0                       \
                                      --device 0                     \
                                      --type hdd                     \
                                      --medium "${vmDiskMedium}"

# -----------------------------------------------------------------------------
# Set up VM specific data strings that we can query later
 
info "  Creating \""${VM_NAME}"\" Extra Data Strings"

VBoxManage setextradata "${VM_NAME}" HostOnlyNetmask     "${HostOnlyNetmask}"
VBoxManage setextradata "${VM_NAME}" HostOnlyVmAddress   "${HostOnlyVmAddress}"
VBoxManage setextradata "${VM_NAME}" HostOnlyHostAddress "${HostOnlyHostAddress}"
VBoxManage setextradata "${VM_NAME}" vmVrdePort          "${vmVrdePort}"

# -----------------------------------------------------------------------------
info "Done" 
# -----------------------------------------------------------------------------
