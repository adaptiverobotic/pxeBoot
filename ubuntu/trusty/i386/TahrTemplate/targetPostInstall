#!/bin/dash
#
# -----------------------------------------------------------------------------
# postinstall.sh
#
# This file is unique per VM, so it should live in its own directory under
# the pxebox project
#
# This file does the following:
#
# 1. Set up the hostname 
# 2. Set up the Ethernet interfaces
# 3. Set up the NFS directory share on the HostOnly interface
# 4. Clear out the apt lists and reload from the host
# 5. Install minimal packages such as sudo, ntp, openssh_server and nfs-common
# 6. Add the defaultuser to the sudo group
#
# -----------------------------------------------------------------------------
# Shell variables for the script:

myHostName="tahrtemplate"

myIPAddress="192.168.56.55"
myUserName="defaultuser"
myUserUID="defaultUID"
myUserGID="defaultGID"
myNFSDirectory="/home/${myUserName}/projects"

hostIPAddress="192.168.56.1"
hostUserName="hostuser"
hostNFSDirectory="/home/${hostUserName}/nfs/${myHostName}"

# -----------------------------------------------------------------------------
# Create a backup directory under etc

mkdir -p /etc/backup

# -----------------------------------------------------------------------------
# Disable IPV6

[ -e /etc/backup/etc/sysctl.conf ] || cp --parents /etc/sysctl.conf /etc/backup

cat <<END-OF_FILE >> /etc/sysctl.conf
#disable ipv6
net.ipv6.conf.all.disable_ipv6 = 1
net.ipv6.conf.default.disable_ipv6 = 1
net.ipv6.conf.lo.disable_ipv6 = 1
END-OF_FILE

# -----------------------------------------------------------------------------
# Set the hostname based on the $myHostName variable

[ -e /etc/backup/hostname ] || cp --parents /etc/hostname /etc/backup

cat <<END-OF_FILE > /etc/hostname
${myHostName}
END-OF_FILE

# -----------------------------------------------------------------------------
# Set the hosts based on the $myHostName variable

[ -e /etc/backup/etc/hosts ] || cp --parents /etc/hosts /etc/backup

cat <<END-OF_FILE > /etc/hosts
127.0.0.1 localhost
127.0.1.1 ${myHostName}
END-OF_FILE

# -----------------------------------------------------------------------------
# Set up the Ethernet interfaces

[ -e /etc/backup/network/interfaces ] || cp --parents /etc/network/interfaces /etc/backup

cat <<END-OF-FILE > /etc/network/interfaces 
# This file describes the network interfaces available on your system
# and how to activate them. For more information, see interfaces(5).

# The loopback network interface
auto lo
iface lo inet loopback

# The vboxnet host-only interface
auto eth0
allow-hotplug eth0
iface eth0 inet static
    address ${myIPAddress}
    netmask 255.255.255.0

# The bridged interface
allow-hotplug eth1
iface eth1 inet dhcp

# The NAT interface
allow-hotplug eth2
iface eth2 inet dhcp
END-OF-FILE

# -----------------------------------------------------------------------------
# Restart all of the Ethernet interfaces, but first create resolv.conf
# if it does not yet exist

if [ -e /etc/resolv.conf ] && [ ! -e /etc/backup/etc/resolv.conf ]; then
   cp --parents /etc/resolv.conf /etc/backup
else
   touch /etc/resolv.conf
fi

for ethx in eth0 eth1 eth2; do
    ifdown $ethx
    ifup   $ethx
done

# -----------------------------------------------------------------------------
# Update the NFS record in /fstab - force nfs3 mounts
#
# Note: Another way around mounting using nfs3 is to write a little sed script
#       to force NEED_IDMAPD=yes in /etc/deault/nfs-common
#
# Note: Also consider using grep to see if this line already exists in /etc/fstab

[ -e /etc/backup/fstab ] || cp --parents /etc/fstab /etc/backup

echo "${hostIPAddress}:${hostNFSDirectory} ${myNFSDirectory} nfs vers=3 0 0" >> /etc/fstab

# -----------------------------------------------------------------------------
# Clobber the apt lists so that when we update from the ISO
# that's now mounted on the host, we actually get the updates

if [ -e /etc/apt/sources.list ] && [ ! -e /etc/backup/etc/apt/sources.list ]; then
   cp --parents /etc/apt/sources.list /etc/backup
   rm /etc/apt/sources.list
fi

cat <<END-OF-FILE > /etc/apt/sources.list.d/dvd.list
# Autogenerated by /home/root/postinstall.sh - DO NOT CHANGE
#
deb http://192.168.56.1:8080/MEDIA/DISK01 trusty main
END-OF-FILE

rm -rf /var/lib/apt/lists/*
mkdir  /var/lib/apt/lists/partial

# -----------------------------------------------------------------------------
# Now update the apt lists

apt-get clean
apt-get update

# -----------------------------------------------------------------------------
# And install additional apps that every system needs

apt-get -y --force-yes install sudo ntp openssh-server nfs-common 

groupmod                   -g "${myUserGID}"            "${myUserName}"
usermod  -u "${myUserUID}" -g "${myUserGID}" -a -G sudo "${myUserName}"

# -----------------------------------------------------------------------------
# Create the user's projects directory and mount it

mkdir -p "/home/${myUserName}/projects"
chown "${myUserName}":"${myUserName}" "/home/${myUserName}/projects"
mount "/home/${myUserName}/projects"
